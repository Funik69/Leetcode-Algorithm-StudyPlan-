class Solution {
public:
void dfs(int i,int j,int m,int n,int &area,int &mxarea,vector<vector<int>>& grid){
    if(i<0 || i==m || j<0 || j==n || grid[i][j]==0 ){
        mxarea=max(area,mxarea);
        return ;
    }   grid[i][j]=0;
        area++;
        dfs(i+1,j,m,n,area,mxarea,grid);          
        dfs(i-1,j,m,n,area,mxarea,grid);
        dfs(i,j+1,m,n,area,mxarea,grid);
        dfs(i,j-1,m,n,area,mxarea,grid);  

}
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        if(grid.size()==0)
        return 0;
        int m=grid.size();
        int n=grid[0].size();
      
        int mxarea=0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]){ 
                     int area=0;
                    dfs(i,j,m,n,area,mxarea,grid);
                }
            }
        }
        return mxarea;
    }
};




